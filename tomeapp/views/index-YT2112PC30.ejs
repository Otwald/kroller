<!DOCTYPE html>
<html lang="en" dir="ltr">

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=1" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Jura">
    <link rel="stylesheet" href="css/40krusher.css">
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="js/interface.js" charset="utf-8" defer></script>
    <!-- <script src="js/dataparse.js" charset="utf-8" defer></script> -->
    <script src="js/calculate.js" charset="utf-8" defer></script>
    <script src="data/stratagems.js" charset="utf-8" defer></script>
    <title>40kRoller</title>
</head>

<body>
    <div id="leftSidenav" class="sidenav">
        <div class="detNav">

        </div>
    </div>
    <div id="rightSidenav" class="sidenav">
        <div class="detNav">

        </div>
    </div>
    <span id="lopenNav" class="openNav" onclick="populateNav('leftSidenav',Stratagems);openNav('leftSidenav')">&#9776;</span>
    <span id="ropenNav" class="openNav" onclick="populateNav('rightSidenav',Stratagems);openNav('rightSidenav')">&#9776;</span>

    <h1 id="banner" title="This is the name of this webapp." align="center" onclick="tickle()">40kroller</h1>
    <h4 align="center">The 40k Game Calculater Game</h4>

    <div id="content">
        <!-- Buttons -->
        <h3 style="width: 100%;">Tracker</h3>

        <div class="mods" style="display: flex; flex-wrap: wrap; justify-content: center;">
            <div class="mod">

                <div id="phaser">
                    <span class="tag phaseTag">Command</span>
                    <span class="tag phaseTag">Movement</span>
                    <span class="tag phaseTag">Psychic</span>
                    <span class="tag phaseTag">Shooting</span>
                    <span class="tag phaseTag">Charge</span>
                    <span class="tag phaseTag">Fight</span>
                    <span class="tag phaseTag">Morale</span>
                </div>
            </div>
            <div class="mod">
                <div class="model vpbox">
                    <div class="statBoxAttacker" id="atkr_pvp_box" title="Primary Victory Points">
                        <label for="atkr_pvp">P.VP</label><br>
                        <input type="number" class="spinner vptracker" name="atkr_pvp" id="atkr_pvp" size=2 value=0>
                    </div>
                    <div class="statBoxAttacker" id="atkr_s1vp_box" title="Primary Victory Points">
                        <label for="atkr_s1vp">S1VP</label><br>
                        <input type="number" class="spinner vptracker" name="atkr_s1vp" id="atkr_s1vp" size=2 value=0>
                    </div>
                    <div class="statBoxAttacker" id="atkr_s2vp_box" title="Primary Victory Points">
                        <label for="atkr_s2vp">S2VP</label><br>
                        <input type="number" class="spinner vptracker" name="atkr_s2vp" id="atkr_s2vp" size=2 value=0>
                    </div>
                    <div class="statBoxAttacker" id="atkr_s3vp_box" title="Primary Victory Points">
                        <label for="atkr_s3vp">S3VP</label><br>
                        <input type="number" class="spinner vptracker" name="atkr_s3vp" id="atkr_s3vp" size=2 value=0>
                    </div>
                    <div class="statBoxAttacker" id="atkr_tvp_box" title="Total Victory Points">
                        TTL<br>
                        <div class="tag statTag statBotTag vptotal" id="atkr_tvp"></div>
                    </div>

                </div>
            </div>
            <div class="mod">
                <div class="model vpbox">
                    <div class="statBoxDefender" id="dfdr_pvp_box" title="Primary Victory Points">
                        <label for="dfdr_pvp">P.VP</label><br>
                        <input type="number" class="spinner vptracker" name="dfdr_pvp" id="dfdr_pvp" size=2 value=0>
                    </div>
                    <div class="statBoxDefender" id="dfdr_s1vp_box" title="Primary Victory Points">
                        <label for="dfdr_s1vp">S1VP</label><br>
                        <input type="number" class="spinner vptracker" name="dfdr_s1vp" id="dfdr_s1vp" size=2 value=0>
                    </div>
                    <div class="statBoxDefender" id="dfdr_s2vp_box" title="Primary Victory Points">
                        <label for="dfdr_s2vp">S2VP</label><br>
                        <input type="number" class="spinner vptracker" name="dfdr_s2vp" id="dfdr_s2vp" size=2 value=0>
                    </div>
                    <div class="statBoxDefender" id="dfdr_s3vp_box" title="Primary Victory Points">
                        <label for="dfdr_s3vp">S3VP</label><br>
                        <input type="number" class="spinner vptracker" name="dfdr_s3vp" id="dfdr_s3vp" size=2 value=0>
                    </div>
                    <div class="statBoxDefender" id="dfdr_tvp_box" title="Total Victory Points">
                        TTL<br>
                        <div class="tag statTag statBotTag vptotal" id="dfdr_tvp"></div>
                    </div>
                </div>
            </div>
        </div>

        <h3 id="statlinesButton" style="width: 100%;">Statlines</h3>
        <!-- Attacker -->
        <div class="mods">
            <div id="attackerHeader">
                <h2 id="attackerName" title="Abilities will show here if they are detected.">Attacker's Stats</h2>
            </div>
            <div class="model">
                <div class="statBoxAttacker" id="attackerModels" title="The number of models in the attacking unit.">
                    <label for="attackerModelsbox">Mdls</label><br>
                    <input type="number" class="spinner" name="attackerModelsbox" id="attackerModelsbox" size=2 value=10>
                </div>
                <div class="statBoxAttacker" id="attackerA" title="The number of attacks each model can make. [For random attacks, see 'Hit Modifiers' tab]">
                    <label for="attackerAbox">A</label><br>
                    <input type="number" class="spinner" name="attackerAbox" id="attackerAbox" size=1 value=1>
                </div>
                <div class="statBoxAttacker" id="attackerAS" title="The WS or BS of the attack (Attack Skill).">
                    <label for="attackerASbox">AS</label><br>
                    <input type="number" class="spinner" name="attackerASbox" id="attackerASbox" size=1 value=3>
                </div>
                <div class="statBoxAttacker" id="attackerS" title="The Strength of the model OR weapon used.">
                    <label for="attackerSbox">S</label><br>
                    <input type="number" class="spinner" name="attackerSbox" id="attackerSbox" size=1 value=4>
                </div>
                <div class="statBoxAttacker" id="attackerAP" title="The AP (no \'-\' symbol!) of the weapon used.">
                    <label for="attackerAPbox">AP</label><br>
                    <input type="number" class="spinner" name="attackerAPbox" id="attackerAPbox" size=1 value=1>
                </div>
            </div>
            <div class="model">
                <!-- <select id="weaponsBox" name="weaponsBox">
                </select> -->
            </div>
            <!-- Defender -->
            <div class="model">
                <div class="statBoxDefender" id="defenderModels">
                    <label for="defenderModelsbox">Mdls</label><br>
                    <input type="number" class="spinner" name="defenderModelsbox" id="defenderModelsbox" size=2 value=10>
                </div>
                <div class="statBoxDefender" id="defenderT" title="The toughness of models in the defending unit.">
                    <label for="defenderTbox">T</label><br>
                    <input type="number" class="spinner" name="defenderTbox" id="defenderTbox" size=1 value=4>
                </div>
                <div class="statBoxDefender" id="defenderW" title="The number of Wounds each model in the defending unit has.">
                    <label for="defenderWbox">W</label><br>
                    <input type="number" class="spinner" name="defenderWbox" id="defenderWbox" size=2 value=1>
                </div>
                <div class="statBoxDefender" id="defenderSv" title="The Save characteristic of the models in the defending unit.">
                    <label for="defenderSvbox">Sv</label><br>
                    <input type="number" class="spinner" name="defenderSvbox" id="defenderSvbox" size=1 value=3>
                </div>
                <div class="statBoxAttacker" id="attackerAP" title="The Damage of the weapon used.">
                    <label for="attackerDbox">D</label><br>
                    <input type="number" class="spinner" name="attackerDbox" id="attackerDbox" size=1 value=1>
                </div>
            </div>
            <div id="defenderHeader">
                <h2 id="defenderName">Defender's Stats</h2>
            </div>
        </div>
        <!-- Hit Mods -->

        <h3>Hit</h3>
        <div class="mods">
            <div class="mod" title="Add this to the die roll.">
                Add <input type="number" class="spinner" name="HitMod" id="HitMod" size=1 value=0> to the hit roll
            </div>
            <div class="mod" title="Roll xDy+z attacks for each model instead of the flat Attack characteristic.">
                <input type="checkbox" class="selectMod" id="randomAttacks"> Random number of attacks:<br>
                <input type="number" class="spinner" name="randomAttacksDice" id="randomAttacksDice" size=1 value=1> D
                <input type="number" class="spinner" name="randomAttacksDenom" id="randomAttacksDenom" size=1 value=6> +
                <input type="number" class="spinner" name="randomAttacksMod" id="randomAttacksMod" size=1 value=0>
            </div>
            <div class="mod" title="These attacks always hit. Do not roll.">
                <input type="checkbox" class="selectMod" id="autohit"> Auto-hit without rolling
            </div>
            <div class="mod" title="Reroll the hit roll if it's lower than this number.">
                <input type="checkbox" class="selectMod" id="rerollhit"> Re-roll
                <input type="number" class="spinner" name="rerollHIT_target" id="rerollHIT_target" size=1 value=1> -
            </div>
            <div class="mod" title="Attack again if you roll a higher than the provided number">
                <input type="checkbox" class="selectMod" id="extraattack">
                <input type="number" class="spinner" name="extraattack_amount" id="extraattack_amount" size=1 value=1> bonus Attacks on
                <input type="number" class="spinner" name="extraattack_target" id="extraattack_target" size=1 value=6> +
            </div>
            <div class="mod" title="This hit always hits on this number or higher">
                <input type="checkbox" class="selectMod" id="extrahit">
                <input type="number" class="spinner" name="extrahit_amount" id="extrahit_amount" size=1 value=1> bonus Hits on
                <input type="number" class="spinner" name="extrahit_target" id="extrahit_target" size=1 value=6> +
            </div>
            <div class="mod" title="This hit automatically hits and wounds on this number or higher">
                <input type="checkbox" class="selectMod" id="autowound"> Auto-wound on
                <input type="number" class="spinner" name="autowound_target" id="autowound_target" size=1 value=6> +
            </div>
            <div class="mod" title="Inflict a Mortal Wound on a wound roll greater than this number">
                <input type="checkbox" class="selectMod" id="mortalsOnHIT"> Mortals on
                <input type="number" class="spinner" name="mortalsOnHIT_target" id="mortalsOnHIT_target" size=1 value=6> +
            </div>
        </div>

        <!-- Wound mods -->

        <h3>Wound</h3>
        <div class="mods">
            <div class="mod" title="Add this to the die roll.">
                Add <input type="number" class="spinner" name="WMod" id="WMod" size=1 value=0> to the wound roll
            </div>
            <div class="mod" title="Reroll the wound roll if it\'s lower than this number.">
                <input type="checkbox" class="selectMod" id="rerollWD"> Re-roll
                <input type="number" class="spinner" name="rerollWD_target" id="rerollWD_target" size=1 value=1> or less
            </div>
            <div class="mod" title="Ignore all wound rolls at or below this number (like Transhuman Physiology)">
                <input type="checkbox" class="selectMod" id="ignorebelow"> Ignore rolls below
                <input type="number" class="spinner" name="ignorebelow_target" id="ignorebelow_target" size=1 value=4>
            </div>
            <div class="mod" title="Hit with additional AP on this number or higher">
                <input type="checkbox" class="selectMod" id="bonusap">
                <input type="number" class="spinner" name="bonusap_amount" id="bonusap_amount" size=1 value=1> Bonus AP on
                <input type="number" class="spinner" name="bonusap_target" id="bonusap_target" size=1 value=6> +
            </div>
            <div class="mod" title="This wound automatically damages the target on this number or higher">
                <input type="checkbox" class="selectMod" id="autodamage"> Auto-damage on
                <input type="number" class="spinner" name="autodamage_target" id="autodamage_target" size=1 value=6> +
            </div>
            <div class="mod" title="Inflict a Mortal Wound on a wound roll greater than this number">
                <input type="checkbox" class="selectMod" id="mortalsOnWD">
                <input type="number" class="spinner" name="mortalsOnWD_amount" id="mortalsOnWD_amount" size=1 value=1> Mortals on
                <input type="number" class="spinner" name="mortalsOnWD_target" id="mortalsOnWD_target" size=1 value=6> +
            </div>
        </div>

        <!-- Save Mods -->

        <h3>Save</h3>
        <div class="mods">
            <div class="mod" title="Add this to the die roll.">
                Add <input type="number" class="spinner" name="SvMod" id="SvMod" size=1 value=0> to the Save roll
            </div>
            <div class="mod" title="Defender has an Invulnerable save.">
                <input type="checkbox" class="selectMod" id="invuln"> Invulnerable Save
                <input type="number" class="spinner" name="invuln_target" id="invuln_target" size=1 value=5>
            </div>
            <div class="mod" title="Roll a D6 for each point of damage. If it's higher than this number remove that point of damage.">
                <input type="checkbox" class="selectMod" id="fnp"> Feel No Pain
                <input type="number" class="spinner" name="fnp_target" id="fnp_target" size=1 value=6>
            </div>
        </div>

        <!-- Damage mods -->

        <h3>Damage</h3>
        <div class="mods">
            <div class="mod" title="Roll xDy+z attacks for each model instead of the flat Damage characteristic.">
                <input type="checkbox" class="selectMod" id="randomDamage"> Random number of damage:<br>
                <input type="number" class="spinner" name="randomDamageDice" id="randomDamageDice" size=1 value=1> D
                <input type="number" class="spinner" name="randomDamageDenom" id="randomDamageDenom" size=1 value=6> +
                <input type="number" class="spinner" name="randomDamageMod" id="randomDamageMod" size=1 value=0>
            </div>

            <div class="mod" title="Reduce damage by this much, to a minimum of 1. (Serpent Shield or Disgustingly Resilient)">
                <label for="flatDRbox">Shield Reduction</label>
                <input type="number" class="spinner" name="flatDRbox" id="flatDRbox" size=1 value=0>
            </div>
            <div class="mod" title="Model can fight back if killed if they roll this number or higher on a D6.">
                <input type="checkbox" class="selectMod" id="fightback"> Fight on death on
                <input type="number" class="spinner" name="fightbackagainst" id="fightbackagainst" size=1 value=4>+
            </div>
            <div class="mod" title="When defending models die, attempt to use Reanimation Protocols.">
                <input type="checkbox" class="selectMod" id="reanimate"> Reanimate on
                <input type="number" class="spinner" name="reanimateagainst" id="reanimateagainst" size=1 value=5>+
                <!-- re-rolling <input type="number" class="spinner"name="reanimatereroll" id="reanimatereroll" size=1 value=1> or lower -->
                <!-- adding <input type="number" class="spinner"name="reanimatemod" id="reanimatemod" size=1 value=1> to roll. -->
            </div>
        </div>

        <h3 style="width: 100%;" id="calculateButton">Tap to Calculate</h3>
        <div id="output">
            <p>
                <span class='outputCataB' title='This simulator'>40kroller</span> is a tiny, lightweight attack simulator for Warhammer40k.
            </p>
            <b>How to use:</b>
            <ul id="motdList">
                <li><span style="font-size: 1.3em;"><span class="outputCataG" title="By this I mean click everything on the page!">Touch</span> the <span class="outputCataB" title="Black boxes containing text are buttons, but input boxes and colored text work, too.">everything</span>!</span></li>
                <li>If something <span class="outputCataR" title="Feel free to leave issues on the github page!">breaks</span>, don"t panic! Just <span class="outputCataB" title="Have you tried turning it off and back on again?">refresh</span>
                    the page.</li>
                <li><span class="outputCataG" title="Put your mouse cursor over it and do not move.">Hover-over</span> or <span class="outputCataG" title="Poke with your finger and wait, if you're on mobile.">Tap-and-wait</span> on things, and a
                    <span class="outputCataB" title="If you're reading this, you're doing it correctly!">tooltip</span> will arrive in 2 seconds. It will tell you secrets!.
                </li>
                <li><span class="outputCataG" title="PC Master Race!">Click</span> or <span class="outputCataG" title="... but this page was designed specifically for mobile use.">tap</span> in a blank space to make tooltips go away.</li>
                <li><span class="outputCataG" title="Hold down your finger or mouse button and drag up or down">Click/Tap and Drag</span> number box up and down to change its value.</li>
            </ul>
            <p><a href="https://github.com/SuperMechaCow/supermechacow.github.io">You can get this code for free on github</a></p>
            <p>Feel free to host, contribute, and share!</p>
        </div>
        <h3 id="importButton" title="Paste a unit into 40kroller from Battlescribe">Import</h3>
        <div class="mods">
            <div class="container">
                <form action="/upload" enctype="multipart/form-data" method="post">
                    <div class="form-group">
                        <input type="file" class="fileSpot" name="atkr_file" id="atkr_file" accept="rosz"><br>
                        <input type="file" class="fileSpot" name="dfdr_file" id="dfdr_file" accept="rosz"><br>
                        <input type="hidden" name="gameid" id="gameid" value='<%- gameid %>'>
                        <input type="submit" value="Upload BattleScribe Rosters" class="fileBtn">
                        <!-- <input type="button" value="Upload BattleScribe Rosters" class="fileBtn" onclick="uploadArmies()"> -->

                    </div>
                </form>
            </div>
        </div>
        <h3>Share</h3>
        <div class="mods" style="display: flex; flex-wrap: wrap; justify-content: center;">
            <img id="qrshare" src="" alt="Have your friend scan this QR code to join your game session" style="display: none;">
            <button type="button" name="button" onclick="dumpit();" title="Export Markdown to show all of your friends on discord and reddit :)">Markdown</button>
        </div>

    </div>
    <script type="text/javascript">
        // var forceData = {
        //     atkr_file: [],
        //     dfdr_file: []
        // };

        // function uploadArmies() {
        //     let atkr_file = document.getElementById("atkr_file").files[0];
        //     let dfdr_file = document.getElementById("dfdr_file").files[0];
        //     let fileFields = new FormData();
        //     fileFields.set("gameid", '<%- gameid %>');
        //     fileFields.set("atkr_file", atkr_file);
        //     fileFields.set("dfdr_file", dfdr_file);
        //
        //     let armyUpload = new XMLHttpRequest();
        //     armyUpload.open("POST", '/upload');
        //     armyUpload.send(fileFields);
        //
        //     armyUpload.onload = function() {
        //         if (armyUpload.status == 200) {
        //             console.log(JSON.parse(armyUpload.response));
        //             if (forceData.atkr_file.length) {
        //                 if (Object.keys(forceData.atkr_file[0]).length) {
        //                     document.getElementById('lopenNav').style = "visibility: visible;";
        //                     atkr_army = JSON.stringify(forceData.atkr_file[0])
        //                 }
        //             }
        //             if (forceData.dfdr_file.length) {
        //                 if (Object.keys(forceData.dfdr_file[0]).length) {
        //                     document.getElementById('ropenNav').style = "visibility: visible;";
        //                     dfdr_army = JSON.stringify(forceData.dfdr_file[0])
        //                 }
        //             }
        //             if (outputBox) {
        //                 document.getElementById('output').innerHTML = `outputBox`;
        //             }
        //             console.log(JSON.stringify(forceData));
        //         }
        //     };
        //
        //     armyUpload.onerror = function() { // only triggers if the request couldn't be made at all
        //         console.log(`Network Error`);
        //     };
        //
        // }

        <% if (forceData.atkr_file.length) { %>
        <% if (Object.keys(forceData.atkr_file[0]).length) { %>
        document.getElementById('lopenNav').style = "visibility: visible;";
        atkr_army = <%- JSON.stringify(forceData.atkr_file[0]) %>
        <% } %>
        <% } %>
        <% if (forceData.dfdr_file.length) { %>
        <% if (Object.keys(forceData.dfdr_file[0]).length) { %>
        document.getElementById('ropenNav').style = "visibility: visible;";
        dfdr_army = <%- JSON.stringify(forceData.dfdr_file[0]) %>
        <% } %>
        <% } %>
        <% if (outputBox) { %>
        document.getElementById('output').innerHTML = `<%- outputBox %>`;
        <% } %>
        var forceData = <%- JSON.stringify(forceData) %>
        document.getElementById('qrshare').src = 'shares/<%- gameid %>.png'
        document.getElementById('qrshare').style.display = 'block'
        console.log(forceData);

        // For debugging rules/abilities parsing
        // console.log(forceData.atkr_file[0].detachments[0]);
    </script>
</body>

</html>
